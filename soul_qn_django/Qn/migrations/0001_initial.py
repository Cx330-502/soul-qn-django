# Generated by Django 4.1 on 2023-05-22 15:15

import Qn.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Answer_sheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("submit_time", models.DateTimeField(null=True, verbose_name="问卷提交时间")),
                ("duration", models.IntegerField(null=True, verbose_name="问卷持续时间")),
                ("score", models.IntegerField(null=True, verbose_name="问卷分数")),
                ("state", models.IntegerField(null=True, verbose_name="问卷状态")),
            ],
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="组织名")),
                (
                    "link",
                    models.CharField(max_length=100, null=True, verbose_name="组织链接"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.IntegerField(verbose_name="问题类型")),
                (
                    "description",
                    models.CharField(max_length=200, null=True, verbose_name="问题描述"),
                ),
                (
                    "necessary",
                    models.BooleanField(default=False, verbose_name="问题是否必答"),
                ),
                (
                    "surface",
                    models.CharField(max_length=200, null=True, verbose_name="问题表面"),
                ),
                ("width", models.IntegerField(verbose_name="问题宽度")),
                ("order", models.IntegerField(verbose_name="问题顺序")),
                ("change_line", models.IntegerField(verbose_name="问题是否换行")),
                ("score", models.IntegerField(null=True, verbose_name="问题分数")),
                (
                    "content1",
                    models.CharField(max_length=400, null=True, verbose_name="问题内容1"),
                ),
                ("content2", models.TextField(null=True, verbose_name="问题内容2")),
                (
                    "video",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=Qn.models.question_file_upload_to,
                        verbose_name="问题视频",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=Qn.models.question_file_upload_to,
                        verbose_name="问题图片",
                    ),
                ),
                (
                    "answer1",
                    models.CharField(max_length=200, null=True, verbose_name="问题答案1"),
                ),
                ("answer2", models.TextField(null=True, verbose_name="问题答案2")),
                ("num_limit", models.IntegerField(null=True, verbose_name="数字上限")),
                ("multi_lines", models.IntegerField(null=True, verbose_name="多行文本")),
                ("unit", models.CharField(max_length=20, null=True, verbose_name="单位")),
            ],
        ),
        migrations.CreateModel(
            name="Questionnaire",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="问卷名")),
                ("type", models.IntegerField(verbose_name="问卷类型")),
                ("public", models.BooleanField(default=True, verbose_name="问卷是否公开")),
                ("permission", models.IntegerField(default=0, verbose_name="问卷权限")),
                (
                    "collection_num",
                    models.IntegerField(default=0, verbose_name="问卷收集人数"),
                ),
                ("state", models.IntegerField(default=0, verbose_name="问卷状态")),
                (
                    "release_time",
                    models.DateTimeField(null=True, verbose_name="问卷发布时间"),
                ),
                ("finish_time", models.DateTimeField(null=True, verbose_name="问卷截止时间")),
                ("start_time", models.DateTimeField(null=True, verbose_name="问卷开始时间")),
                ("duration", models.IntegerField(null=True, verbose_name="问卷持续时间")),
                (
                    "password",
                    models.CharField(max_length=20, null=True, verbose_name="问卷密码"),
                ),
                ("title", models.CharField(max_length=100, verbose_name="问卷标题")),
                (
                    "description",
                    models.CharField(max_length=100, null=True, verbose_name="问卷描述"),
                ),
                (
                    "link",
                    models.CharField(max_length=100, null=True, verbose_name="问卷链接"),
                ),
                (
                    "qr_code",
                    models.ImageField(
                        null=True,
                        upload_to=Qn.models.questionnaire_qrcode_file_upload_to,
                        verbose_name="二维码",
                    ),
                ),
                (
                    "background_image",
                    models.ImageField(
                        null=True,
                        upload_to=Qn.models.questionnaire_background_image_file_upload_to,
                        verbose_name="背景图片",
                    ),
                ),
                (
                    "header_image",
                    models.ImageField(
                        null=True,
                        upload_to=Qn.models.questionnaire_header_image_file_upload_to,
                        verbose_name="表单图片",
                    ),
                ),
                (
                    "font_color",
                    models.CharField(max_length=100, null=True, verbose_name="字体颜色"),
                ),
                (
                    "header_font_color",
                    models.CharField(max_length=100, null=True, verbose_name="表单字体颜色"),
                ),
                (
                    "question_num_visible",
                    models.BooleanField(default=True, verbose_name="题号是否可见"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=100, verbose_name="用户名")),
                ("password", models.CharField(max_length=20, verbose_name="密码")),
                ("email", models.EmailField(max_length=254, verbose_name="邮箱")),
            ],
        ),
        migrations.CreateModel(
            name="User_create_Questionnaire",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "questionnaire",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Qn.questionnaire",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="Qn.user"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question_answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "answer",
                    models.CharField(max_length=200, null=True, verbose_name="回答"),
                ),
                ("answer2", models.TextField(null=True, verbose_name="回答2")),
                ("answer3", models.IntegerField(null=True, verbose_name="回答3")),
                (
                    "answer4",
                    models.ImageField(null=True, upload_to="", verbose_name="回答4"),
                ),
                (
                    "answer5",
                    models.FileField(
                        null=True,
                        upload_to=Qn.models.answer_file_upload_to,
                        verbose_name="回答5",
                    ),
                ),
                ("score", models.IntegerField(null=True, verbose_name="回答得分")),
                (
                    "answer_sheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Qn.answer_sheet",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="Qn.question"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="question",
            name="questionnaire",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="Qn.questionnaire"
            ),
        ),
        migrations.CreateModel(
            name="Organization_create_Questionnaire",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("necessary", models.BooleanField(verbose_name="问卷是否必填")),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Qn.organization",
                    ),
                ),
                (
                    "questionnaire",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Qn.questionnaire",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Organization_2_User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("state", models.IntegerField(verbose_name="用户在组织中的状态")),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Qn.organization",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="Qn.user"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "message",
                    models.CharField(max_length=200, null=True, verbose_name="消息"),
                ),
                ("type", models.IntegerField(null=True, verbose_name="消息类型")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="Qn.user"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="answer_sheet",
            name="answerer",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="Qn.user"
            ),
        ),
        migrations.AddField(
            model_name="answer_sheet",
            name="questionnaire",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="Qn.questionnaire"
            ),
        ),
    ]
